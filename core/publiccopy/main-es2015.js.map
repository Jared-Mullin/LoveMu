{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth-guard.service.ts","./src/app/authInterceptor.ts","./src/app/authentication.service.ts","./src/app/file-list/file-list.component.ts","./src/app/file-list/file-list.component.html","./src/app/file.service.ts","./src/app/google-registration/google-registration.component.ts","./src/app/google-registration/google-registration.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/logout/logout.component.ts","./src/app/logout/logout.component.html","./src/app/message.service.ts","./src/app/message/message.component.ts","./src/app/message/message.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/app/spotify.service.ts","./src/app/upload.service.ts","./src/app/users.service.ts","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/environments/environment.ts","./src/main.ts","webpack:///ws (ignored)?4ec4","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UsersComponent } from '../users/users.component';\r\nimport { RegistrationComponent } from '../registration/registration.component';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { ProfileComponent} from '../profile/profile.component';\r\nimport { LogoutComponent} from '../logout/logout.component';\r\nimport { HomeComponent} from '../home/home.component';\r\nimport { MessageComponent } from '../message/message.component';\r\n//import { MessageTestComponent } from '../message-test/message-test.component';\r\nimport { AuthGuardService } from '../auth-guard.service';\r\nimport { GoogleRegistrationComponent} from '../google-registration/google-registration.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'users', component: UsersComponent, canActivate: [AuthGuardService]},\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegistrationComponent },\r\n  { path: '', component: HomeComponent },\r\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuardService]},\r\n  { path: 'users/:id', component: ProfileComponent, canActivate: [AuthGuardService]},\r\n  { path: 'logout', component: LogoutComponent, canActivate: [AuthGuardService]},\r\n  //{ path: 'messageTest', component: MessageTestComponent, canActivate: [AuthGuardService] },\r\n  { path: 'message', component: MessageComponent, canActivate: [AuthGuardService] },\r\n  { path: 'message/:id', component: MessageComponent, canActivate: [AuthGuardService] },\r\n  { path: 'google', component: GoogleRegistrationComponent},\r\n  { path: '**', redirectTo: '' } // otherwise redirect to home\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\nimport { MessageService } from './message.service';\nimport {Location} from '@angular/common';\n\nimport { AuthenticationService } from './authentication.service';\nimport { SpotifyService } from './spotify.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'LoveMu';\n\n  constructor (private location: Location, private messageService: MessageService, private authService: AuthenticationService, private spotifyService: SpotifyService) { }\n\n  ngOnInit() {\n    this.authService.isAuthenticated();\n    this.spotifyService.handleSpotify();\n    this.authService.googleValidate();\n  }\n\n  cancel() {\n    this.location.back();\n  }\n\n  backClicked() {\n    this.location.back();\n  }\n}\n","<div class = \"mainContent\">\n  <div>\n    <app-navbar></app-navbar>\n  </div>\n  <div>\n    <router-outlet></router-outlet>\n  </div>\n  <!--<footer>\n    <div style = \"text-align: center\">\n      hello\n    </div>\n  </footer>-->\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {SocketIoModule, SocketIoConfig} from 'ngx-socket-io';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {RouterTestingModule} from '@angular/router/testing';\r\nimport {NavbarComponent} from \"./navbar/navbar.component\";\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {AppComponent} from './app.component';\r\nimport {UsersComponent} from './users/users.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegistrationComponent} from './registration/registration.component';\r\nimport {AppRoutingModule} from './app-routing/app-routing.module';\r\nimport {ProfileComponent} from './profile/profile.component';\r\n//import { MessageTestComponent } from './message-test/message-test.component';\r\nimport { MessageComponent } from './message/message.component';\r\nimport {AuthInterceptor} from './authInterceptor';\r\nimport { GoogleRegistrationComponent } from './google-registration/google-registration.component';\r\nimport { FileListComponent } from './file-list/file-list.component';\r\n\r\nconst config: SocketIoConfig = { url: 'https://lovemu.compsoc.ie/', options: {}};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UsersComponent,\r\n    LoginComponent,\r\n    RegistrationComponent,\r\n    ProfileComponent,\r\n    NavbarComponent,\r\n//    MessageTestComponent,\r\n    MessageComponent,\r\n    GoogleRegistrationComponent,\r\n    FileListComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    MatCardModule,\r\n    MatDatepickerModule,\r\n    MatDividerModule,\r\n    MatToolbarModule,\r\n    MatGridListModule,\r\n    MatSidenavModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatNativeDateModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    RouterTestingModule,\r\n    SocketIoModule.forRoot(config),\r\n    ScrollingModule,\r\n    MatProgressBarModule\r\n  ],\r\n  providers: [\r\n    CookieService,\r\n    MatNativeDateModule,\r\n    MatDatepickerModule,\r\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private authService: AuthenticationService, private route: Router) { }\n\n  canActivate(): boolean {\n    const check = this.authService.isAuthenticated()\n    if (check) {\n      return true;\n    } else {\n      this.route.navigate(['login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest,HttpHandler,HttpEvent,HttpInterceptor} from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            const cloned = req.clone({\n                headers: req.headers.set(\"Authorization\",\n                    \"Bearer \" + token)\n            });\n\n            return next.handle(cloned);\n        }\n        else {\n            return next.handle(req);\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UsersService } from './users.service';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(private userService: UsersService, private http: HttpClient, private router: Router) { }\n\n  public isAuthenticated(): boolean {\n    const token = localStorage.getItem('token');\n    if (token) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('id');\n    this.router.navigate(['/']);\n  };\n\n  public getCurrentUserID() {\n    return localStorage.getItem('id');\n  }\n\n  public setUserInfo(token, id) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('id', id)\n  }\n\n  public validate(email, password) {\n    return this.http.post('https://lovemu.compsoc.ie/auth/login', {email, password}).subscribe((res) => {\n      let token = res['token'];\n      let id = res['id'];\n      this.setUserInfo(token, id);\n      this.router.navigate(['/']);\n    });\n  }\n\n  public googleValidate() {\n    const url = window.location.href;\n    const queryParams = url.substring(26);\n    if (queryParams.length > 0) {\n      let tempArr = queryParams.split('=');\n      if (tempArr[0] === '?google_token' && tempArr.length == 4) {\n        const token = tempArr[1].substring(0, tempArr[1].indexOf(\"&\"));\n        const id = tempArr[2].substring(0, tempArr[2].indexOf(\"&\"));\n        this.setUserInfo(token, id);\n        const verified = tempArr[3].substring(0, 3);\n        if (verified != 'true') {\n          this.router.navigate(['/google']);\n        }\n      }\n    }\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { FileService } from '../file.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n selector: 'app-file-list',\n templateUrl: './file-list.component.html',\n styleUrls: ['./file-list.component.css']\n})\nexport class FileListComponent {\n\n public fileList$: Observable<string[]> = this.fileService.list();\n\n constructor(private fileService: FileService) { }\n\n public download(fileName: string):  void {\n   this.fileService.download(fileName);\n }\n\n public remove(fileName: string):  void {\n   this.fileService.remove(fileName);\n }\n}\n","<h1>Your files</h1>\n<ul>\n <li *ngFor=\"let fileName of fileList$ | async\" >\n   {{fileName}}&nbsp;&nbsp;\n   <span (click)=\"download(fileName)\">download</span>&nbsp;\n   <span (click)=\"remove(fileName)\">remove</span>\n </li>\n</ul>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject, Observable } from 'rxjs';\n\n@Injectable({\n providedIn: 'root'\n})\nexport class FileService {\n private fileList: string[] = new Array<string>();\n private fileList$: Subject<string[]> = new Subject<string[]>();\n\n constructor() { }\n\n public upload(fileName: string, fileContent: string): void {\n   this.fileList.push(fileName);\n   this.fileList$.next(this.fileList);\n }\n\n public download(fileName: string): void {\n\n }\n\n public remove(fileName): void {\n   this.fileList.splice(this.fileList.findIndex(name => name === fileName), 1);\n   this.fileList$.next(this.fileList);\n }\n\n public list(): Observable<string[]> {\n   return this.fileList$;\n }\n\n private addFileToList(fileName: string): void {\n   this.fileList.push(fileName);\n   this.fileList$.next(this.fileList);\n }\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../users/User';\n\nimport { AuthenticationService } from '../authentication.service';\nimport { UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-google-registration',\n  templateUrl: './google-registration.component.html',\n  styleUrls: ['./google-registration.component.css']\n})\nexport class GoogleRegistrationComponent implements OnInit {\n  user: User;\n  public isCurrentUser: boolean;\n  registrationForm;\n\n  constructor(private http: HttpClient, private formBuilder: FormBuilder, private userService: UsersService, private authService: AuthenticationService, private route: ActivatedRoute) {\n    this.registrationForm = this.formBuilder.group({\n      user_name: '',\n      fname: '',\n      sname: '',\n      location: '',\n      image: '',\n      gender: '',\n      sexuality: '',\n      dob: '',\n      bio: ''\n    });\n  }\n\n\n  ngOnInit(): void {\n    this.getUser();\n  }\n\n  getFormData(): void {\n    this.registrationForm.controls['user_name'].setValue(this.user.user_name);\n    this.registrationForm.controls['fname'].setValue(this.user.fname);\n    this.registrationForm.controls['sname'].setValue(this.user.sname);\n    this.registrationForm.controls['gender'].setValue(this.user.gender);\n    this.registrationForm.controls['location'].setValue(this.user.location);\n    this.registrationForm.controls['sexuality'].setValue(this.user.sexuality);\n    this.registrationForm.controls['dob'].setValue(this.user.dob);\n    this.registrationForm.controls['bio'].setValue(this.user.bio);\n  }\n\n\n  getUser(): void {\n    this.userService.getUser(this.userService.getCurrentUser()).subscribe(\n      user => {\n        this.user = user;\n        this.getFormData();\n      }\n    );\n  }\n\n  onSubmit(userData) {\n    this.http.put(`https://lovemu.compsoc.ie/profiles/${this.userService.getCurrentUser()}`, userData).subscribe((res) => {\n      window.location.href='https://lovemu.compsoc.ie/spotify/reqAccess';\n    });\n  }\n}\n","<h2>Registration</h2>\n  <div class = \"regDiv\">\n    <form class = \"registration\" [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit(registrationForm.value)\">\n      <mat-card class = \"registrationCard\">\n        <mat-card-content>\n          <mat-form-field>\n            <input matInput placeholder=\"Username\" formControlName=\"user_name\">\n          </mat-form-field>&nbsp;\n          <mat-form-field>\n            <input matInput placeholder=\"First Name\" formControlName=\"fname\">\n          </mat-form-field>\n          <br>\n          <mat-form-field>\n            <input matInput placeholder=\"Surname\" formControlName=\"sname\">\n          </mat-form-field>&nbsp;\n          <mat-form-field>\n            <mat-select placeholder=\"County\" formControlName=\"location\">\n              <mat-option value=\"Antrim\">Antrim</mat-option>\n              <mat-option value=\"Armagh\">Armagh</mat-option>\n              <mat-option value=\"Carlow\">Carlow</mat-option>\n              <mat-option value=\"Cavan\">Cavan</mat-option>\n              <mat-option value=\"Clare\">Clare</mat-option>\n              <mat-option value=\"Cork\">Cork</mat-option>\n              <mat-option value=\"Derry\">Derry</mat-option>\n              <mat-option value=\"Donegal\">Donegal</mat-option>\n              <mat-option value=\"Down\">Down</mat-option>\n              <mat-option value=\"Dublin\">Dublin</mat-option>\n              <mat-option value=\"Fermanagh\">Fermanagh</mat-option>\n              <mat-option value=\"Galway\">Galway</mat-option>\n              <mat-option value=\"Kerry\">Kerry</mat-option>\n              <mat-option value=\"Kildare\">Kildare</mat-option>\n              <mat-option value=\"Kilkenny\">Kilkenny</mat-option>\n              <mat-option value=\"Laois\">Laois</mat-option>\n              <mat-option value=\"Leitrim\">Leitrim</mat-option>\n              <mat-option value=\"Limerick\">Limerick</mat-option>\n              <mat-option value=\"Longford\">Longford</mat-option>\n              <mat-option value=\"Louth\">Louth</mat-option>\n              <mat-option value=\"Mayo\">Mayo</mat-option>\n              <mat-option value=\"Meath\">Meath</mat-option>\n              <mat-option value=\"Monaghan\">Monaghan</mat-option>\n              <mat-option value=\"Offaly\">Offaly</mat-option>\n              <mat-option value=\"Roscommon\">Roscommon</mat-option>\n              <mat-option value=\"Sligo\">Sligo</mat-option>\n              <mat-option value=\"Tipperary\">Tipperary</mat-option>\n              <mat-option value=\"Tyrone\">Tyrone</mat-option>\n              <mat-option value=\"Waterford\">Waterford</mat-option>\n              <mat-option value=\"Westmeath\">Westmeath</mat-option>\n              <mat-option value=\"Wexford\">Wexford</mat-option>\n              <mat-option value=\"Wicklow\">Wicklow</mat-option>\n            </mat-select>\n          </mat-form-field>\n          <br>\n          <mat-form-field>\n            <mat-select formControlName=\"gender\" placeholder=\"Gender\">\n                <mat-option value=\"Female\">Female</mat-option>\n                <mat-option value=\"Male\">Male</mat-option>\n                <mat-option value=\"Rather Not Say\">Rather Not Say</mat-option>\n                <mat-option value=\"Other\">Other</mat-option>\n            </mat-select>\n          </mat-form-field>&nbsp;\n\n          <mat-form-field>\n            <mat-select formControlName=\"sexuality\" placeholder=\"I want to see\">\n              <mat-option value=\"Male\"> Men </mat-option>\n              <mat-option value=\"Female\"> Women </mat-option>\n              <mat-option value=\"Everyone\"> Everyone </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <br>\n          <mat-form-field>\n            <input matInput placeholder=\"Image URL\" formControlName=\"image\">\n          </mat-form-field>\n          <mat-form-field>\n            <mat-label>Date of Birth</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n          </mat-form-field>\n          <br>\n          <mat-form-field class = \"bio\">\n            <textarea matInput placeholder=\"Bio\" formControlName=\"bio\"></textarea>\n          </mat-form-field>\n        </mat-card-content>\n        <mat-card-footer>\n          <button type=\"submit\" mat-raised-button>Register</button>\n        </mat-card-footer>\n      </mat-card>\n    </form>\n  </div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private authService: AuthenticationService, private router : Router) { }\n\n  ngOnInit(): void {\n    if (this.authService.isAuthenticated()) this.router.navigate(['/users']);\n  }\n\n}\n","<div class = \"welcome\">\n  <div class = \"sub\">Welcome to</div>\n  <br>\n  <div class = \"head\">LoveMu</div>\n  <br>\n  <div class = \"sub\">A dating website that matches you based on your music preferences!</div>\n</div>\n\n<div class = \"login\">\n  Login or register now plz\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { AuthenticationService } from '../authentication.service';\nimport { Router } from '@angular/router';\nimport { DomSanitizer} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm;\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthenticationService, private router : Router) {\n    this.loginForm = this.formBuilder.group({\n      email: '',\n      password: ''\n    });\n  }\n  ngOnInit() {\n  }\n\n  onSubmit(userData) {\n    this.authService.validate(userData.email, userData.password);\n  }\n}\n","<h2> Welcome Back to LoveMu! </h2>\n<h3> Login </h3>\n<div class = \"loginDiv\">\n<form [formGroup]=\"loginForm\" class = \"loginForm\" (ngSubmit)=\"onSubmit(loginForm.value)\">\n  <mat-card class = \"loginCard\">\n    <mat-card-content>\n      <mat-form-field>\n        <input matInput type=\"email\" placeholder=\"Email Address or Username\" formControlName=\"email\">\n      </mat-form-field>\n      <br>\n      <mat-form-field>\n        <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\">\n      </mat-form-field>\n    </mat-card-content>\n    <mat-card-footer>\n      <button type=\"submit\" mat-raised-button>Login</button>\n      <a href=\"https://lovemu.compsoc.ie/auth/google\"><img src=\"https://developers.google.com/identity/images/btn_google_signin_light_normal_web.png\"></a>\n    </mat-card-footer>\n  </mat-card>\n</form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private authService: AuthenticationService, private router : Router) { }\n\n  ngOnInit(): void {\n    this.authService.logout();\n  }\n\n}\n","<p>logout works!</p>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport * as io from 'socket.io-client';\nimport { Observable } from 'rxjs/Observable';\nimport { Message } from './message/Message';\nimport { Chatroom } from './message/Chatroom'\nimport { UsersService } from './users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  private url = 'https://lovemu.compsoc.ie';\n  private socket;  \n  messages: Message[]; \n\n  constructor(private userService: UsersService, public http: HttpClient) { \n    this.socket = io(this.url, { query: { id: userService.getCurrentUser() }});\n    this.socket.emit('message', 'Hello there from Angular.');\n  }\n\n  sendMessage(userData) {\n    console.log(userData);\n    if (userData.recipient == \"\") userData.recipient = \"5e5fbb06b13a0a5dd22a8008\";\n    this.http.post('https://lovemu.compsoc.ie/messages/send', userData).subscribe((res => {\n      this.socket.emit('dm', userData);\n    }));\n  }\n\n  onNewMessage() {\n    return Observable.create((observer) => {\n      this.socket.on('message', (data) => {\n          observer.next(data);\n      });\n    });\n  }\n\n  getInitChatrooms(): Observable<Chatroom[]> {\n    return this.http.get<Chatroom[]>('https://lovemu.compsoc.ie/messages/chatroom');\n  }\n\n  getMessages(id): Observable<Message[]> {\n    return this.http.get<Message[]>('https://lovemu.compsoc.ie/messages/retrieve/'+id);\n  }\n\n  /*sendMessage(userData) {\n    //this.socket.emit('message', message);\n    this.http.post('https://lovemu.compsoc.ie/messages/send', userData).subscribe((res => {\n      console.log('Req Made');\n    }));\n  }*/\n\n  /*public getNewMessages = () => {\n    return Observable.create((observer) => {\n        this.socket.on('message', (message) => {\n            observer.next(message);\n        });\n    });\n  }*/\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from '../users/User';\nimport { UsersService } from '../users.service';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.css']\n})\nexport class MessageComponent implements OnInit {\n  activeUser: User;\n  user: User;\n\n  constructor(public messageService: MessageService, private userService: UsersService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.getUser();\n    let id = this.route.snapshot.paramMap.get('id');\n    if (id != null) this.getActiveUser(id);\n  }\n\n  getActiveUser(id): void {\n    this.userService.getUser(id.toString()).subscribe((user) => {\n      this.activeUser = user;\n    });\n  }\n\n  getUser(): void {\n    let id = this.userService.getCurrentUser();\n    this.userService.getUser(id.toString()).subscribe((user) => {\n      this.user = user;\n    });\n  } \n\n}\n","\n<p>message pagtese</p>\n<div *ngIf=\"user && activeUser\">\n    <p>{{user.fname}}</p>\n    <p>{{activeUser.fname}}</p>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from \"../authentication.service\";\nimport { Observable } from \"rxjs\";\nimport { UsersService } from '../users.service'\nimport { User } from '../users/User';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  userID: String;\n  usrAuthed: boolean;\n\n  constructor(public userService: UsersService, public authService: AuthenticationService) {\n  }\n\n  ngOnInit(): void {\n    this.userID = this.userService.getCurrentUser();\n    this.usrAuthed = this.authService.isAuthenticated();\n  }\n\n}\n","<ng-container>\n  <mat-toolbar class = \"toolbar\">\n    <span>\n      <a routerLink = \"/\">LoveMu</a>\n    </span>\n    <span class = \"spacer\"> </span>\n    <a *ngIf = \"authService.isAuthenticated()\" routerLink = \"/users\">Dashboard</a>\n    <a routerLink = \"/messageTest\" *ngIf = \"authService.isAuthenticated()\">Messaging</a>\n    <a *ngIf = \"!authService.isAuthenticated()\" routerLink = \"/register\" >Register</a>\n    <a *ngIf = \"!authService.isAuthenticated()\" routerLink = \"/login\">Login</a>\n    <a *ngIf = \"authService.isAuthenticated()\" [routerLink] = \"['/users/', userService.getCurrentUser()]\">Edit Profile</a>\n    <a routerLink = \"/\" (click) = \"authService.logout()\" *ngIf = \"authService.isAuthenticated()\">Logout</a>\n  </mat-toolbar>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FormBuilder } from '@angular/forms';\nimport { User } from '../users/User';\nimport { UsersService } from '../users.service';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthenticationService } from '../authentication.service';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { Artist } from '../users/Artist';\nimport { DomSanitizer, SafeResourceUrl, SafeUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n})\nexport class ProfileComponent implements OnInit {\n  user: User;\n  artists: Artist[];\n  public isCurrentUser: boolean;\n  profileForm;\n  playlistUrl: SafeResourceUrl;\n  songUrl: SafeResourceUrl;\n  public editUser: boolean\n\n  constructor(private http: HttpClient, private formBuilder: FormBuilder, private cookieService: CookieService, private route: ActivatedRoute, private userService: UsersService, private authService: AuthenticationService, private sanitizer: DomSanitizer) {\n    this.profileForm = this.formBuilder.group({\n      fname: '',\n      sname: '',\n      location: '',\n      image: '',\n      gender: '',\n      sexuality: '',\n      bio: '',\n      user_name: '',\n      dob: ''\n    });\n  }\n\n\n  ngOnInit(): void {\n    this.getUser();\n  }\n\n  getFormData(): void {\n    this.profileForm.controls['fname'].setValue(this.user.fname);\n    this.profileForm.controls['sname'].setValue(this.user.sname);\n    this.profileForm.controls['gender'].setValue(this.user.gender);\n    this.profileForm.controls['location'].setValue(this.user.location);\n    this.profileForm.controls['sexuality'].setValue(this.user.sexuality);\n    this.profileForm.controls['user_name'].setValue(this.user.user_name);\n    this.profileForm.controls['bio'].setValue(this.user.bio);\n    this.profileForm.controls['gender'].setValue(this.user.gender);\n    this.profileForm.controls['sexuality'].setValue(this.user.sexuality);\n    this.profileForm.controls['dob'].setValue(this.user.dob);\n  }\n\n  checkFormData(userData): void {\n    if (!userData.fname) userData.fname = this.user.fname;\n    if (!userData.sname) userData.sname = this.user.sname;\n    if (!userData.gender) userData.gender = this.user.gender;\n    if (!userData.location) userData.location = this.user.location;\n    if (!userData.image) userData.image = this.user.image;\n    if (!userData.sexuality) userData.sexuality = this.user.sexuality;\n    if (!userData.bio) userData.bio = this.user.bio;\n    if (!userData.user_name) userData.user_name = this.user.user_name;\n  }\n\n  getUser(): void {\n    let id = this.route.snapshot.paramMap.get('id');\n    let currentId = this.userService.getCurrentUser();\n\n    if (currentId == id) {\n      this.isCurrentUser = true;\n    }\n    this.userService.getUser(id.toString()).subscribe((user) => {\n      this.user = user;\n      this.artists = user.artists;\n      console.log(user);\n      if (this.songUrl != '') {\n        this.songUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.user.favouriteSong);\n      }\n      if (this.playlistUrl != '') {\n        this.playlistUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.user.playlist);\n      }\n      this.getFormData();\n    });\n  }\n\n  onSubmit(userData) {\n    this.checkFormData(userData);\n    this.http.put('https://lovemu.compsoc.ie/profiles/' + this.userService.getCurrentUser(), userData).subscribe((res) => {\n      this.editUser = false;\n    });\n  }\n\n  \n}\n","<!-- Generic profile page shown for all profiles -->\n<div *ngIf=\"user && !editUser\" class = \"container\">\n  <div class = \"profile\">\n    <!-- First card in profile div: main info, pic, match, etc -->\n    <mat-card class = \"mainProfile\">\n      <mat-card-content>\n        <div *ngIf = \"user && !this.isCurrentUser\">\n          <!-- Match % -->\n          {{user.score}}% Match\n          <section class=\"section\">\n            <mat-progress-bar value = \"{{user.score}}\" color = \"accent\">\n            </mat-progress-bar>\n          </section>\n        </div>\n        <div *ngIf = \"user && this.isCurrentUser\">\n          <button (click)=\"editUser = true\" class = \"editButton\" mat-raised-button>Edit Profile</button>\n        </div>\n        <!-- User image -->\n        <img src = {{user.image}} class = \"userImage\">\n        <br><br>\n        <!-- Name, Sexuality, Gender, Location - with icons -->\n        <div class = \"info\">\n          <div class = \"basicInfo\">\n            {{user.fname}} {{user.sname}}, {{user.age}}\n          </div>\n          <div>\n            <i class=\"material-icons\">location_on</i>{{user.location}}\n          </div>\n          <div *ngIf = \"user.gender != 'Rather Not Say'\">\n            <i *ngIf = \"user.gender == 'Male'\" class = 'fas fa-male'></i>\n            <i *ngIf = \"user.gender == 'Female'\" class = 'fas fa-female'></i>\n            <i *ngIf = \"user.gender == 'Other'\" class=\"material-icons\">person</i>\n            {{user.gender}}\n          </div>\n          <div>\n            <i *ngIf = \"user.sexuality == 'Women'\" class=\"fas fa-venus\"></i>\n            <i *ngIf = \"user.sexuality == 'Men'\" class=\"fa fa-mars\"></i>\n            <i *ngIf = \"user.sexuality == 'Everyone'\" class=\"fa fa-venus-mars\"></i>\n            {{user.sexuality}}\n          </div>\n        </div>\n        <br>\n        <!-- Bio divided with divider -->\n        <mat-divider></mat-divider>\n        <div class = \"bio\">\n          {{user.bio}}\n        </div>\n        <mat-divider></mat-divider>\n        <button routerLink=\"/message/{{user._id}}\"mat-raised-button=\"\">Send a message!</button>\n      </mat-card-content>\n    </mat-card>\n\n    <br>\n\n    <!-- Second card in profile div: spotify widget -->\n    <mat-card class = \"spotifyWidget\">\n      <div class=\"playlist\">\n        <iframe class = \"spotify\" src=\"https://open.spotify.com/embed/playlist/37i9dQZF1DX6p4TJxzMRDe\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n        <!--  <iframe *ngIf=\"songUrl\"[src]=playlistUrl width=\"300\" height=\"320\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n          <iframe *ngIf=\"playlistUrl\"[src]=songUrl width=\"300\" height=\"320\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe> -->\n      </div>\n    </mat-card>\n  </div> <!-- End of profile div -->\n\n  <!-- Card that will go either to right or underneath that shows users music info -->\n  <mat-card class = \"music\">\n    <div class = \"top\">\n      Top Artists!\n    </div>\n    <div class = \"artists\">\n      <div *ngFor = \"let artist of artists\">\n        <a class = \"artistLink\" href={{artist.external_urls.spotify}}>\n          <img class = \"artistImage\" src = \"{{artist.images[0].url}}\">\n          {{artist.name}}\n        </a>\n        <mat-divider></mat-divider>\n      </div>\n    </div>\n  </mat-card>\n\n</div> <!-- End of container div -->\n\n<!-- This is only shown to a user when they are editing a profile that is their own after they click edit profile button -->\n<div class =\"updateDiv\" *ngIf=\"user && editUser\">\n  <form class = \"updateForm\" [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit(profileForm.value)\">\n    <mat-card class = \"updateCard\">\n      <mat-card-content>\n\n        <mat-form-field>\n          <input matInput placeholder=\"First Name\" formControlName=\"fname\">\n        </mat-form-field>&nbsp;\n\n        <mat-form-field>\n          <input matInput placeholder=\"Surname\" formControlName = \"sname\">\n        </mat-form-field>\n\n        <br>\n\n        <mat-form-field>\n          <input matInput placeholder=\"Username\" formControlName = \"user_name\">\n        </mat-form-field>&nbsp;\n\n        <mat-form-field>\n          <mat-label>Date of birth</mat-label>\n          <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field>\n\n        <br>\n\n        <!--\n        <mat-form-field>\n          <mat-select name=\"country\" placeholder=\"Country\" formControlName = \"country\">\n            <option *ngFor = \"let country of countries\" value=\"{{country??}}\">Select Country</option>\n          </mat-select>\n        </mat-form-field>&nbsp;\n\n        <mat-form-field>\n          <mat-select name=\"state\" class=\"states order-alpha\" id=\"stateId\">\n            <option value=\"\">Select State</option>\n          </mat-select>\n        </mat-form-field>\n        -->\n\n        <br>\n\n        <mat-form-field>\n          <mat-select formControlName=\"gender\" placeholder=\"Gender\">\n            <mat-option value=\"Female\">Female</mat-option>\n            <mat-option value=\"Male\">Male</mat-option>\n            <mat-option value=\"Rather Not Say\">Rather Not Say</mat-option>\n            <mat-option value=\"Other\">Other</mat-option>\n          </mat-select>\n        </mat-form-field>&nbsp;\n\n        <mat-form-field>\n          <mat-select formControlName=\"sexuality\" placeholder=\"I want to see\">\n            <mat-option value=\"Male\"> Men </mat-option>\n            <mat-option value=\"Female\"> Women </mat-option>\n            <mat-option value=\"Everyone\"> Everyone </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <br>\n\n        <mat-form-field class = \"bio\">\n          <textarea matInput placeholder=\"Bio\" formControlName=\"bio\"></textarea>\n        </mat-form-field>\n\n        <br>\n\n        <!--\n        <button type=\"button\" mat-raised-button (click)=\"fileUpload.click()\">Upload photo</button>\n        <input type=\"file\" #fileUpload id=\"fileUpload\" name=\"fileUpload\" multiple=\"multiple\" accept=\"image/*\" style=\"display:none;\"  (click)=\"onClick()\" />\n        -->\n      </mat-card-content>\n      <mat-card-footer>\n        <button class = \"updateButton\" type=\"submit\" mat-raised-button>Change</button>\n      </mat-card-footer>\n    </mat-card>\n  </form>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef  } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpEventType, HttpErrorResponse } from '@angular/common/http';\nimport { AuthenticationService } from '../authentication.service';\nimport { of } from 'rxjs';  \nimport { catchError, map } from 'rxjs/operators';  \nimport { UploadService } from  '../upload.service';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\n\nexport class RegistrationComponent implements OnInit {\n  registrationForm;\n  cookie: string;\n  image: string = \"default.png\";\n  @ViewChild(\"fileUpload\", {static: false}) fileUpload: ElementRef;\n  files  = [];\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthenticationService, private router : Router, private http: HttpClient, private uploadService: UploadService, private matIconRegistry: MatIconRegistry, private domSanitizer: DomSanitizer) {\n    this.registrationForm = this.formBuilder.group({\n      email: ['', Validators.required, Validators.email],\n      password:['', Validators.required, Validators.min(5)],\n      user_name: ['', Validators.required, Validators.min(5), Validators.max(20)],\n      fname: ['', Validators.required, Validators.max(20)],\n      sname: ['', Validators.required, Validators.max(20)],\n      location: ['', Validators.required],\n      dob: ['', Validators.required],\n      image: '',\n      gender: ['', Validators.required],\n      sexuality: ['', Validators.required],\n      bio: ['']\n    });\n  }\n\n  ngOnInit() {  \n    \n  }\n\n  onSubmit(userData) {\n    userData.image = this.image;\n    this.http.post('https://lovemu.compsoc.ie/auth/register', userData, {withCredentials: true}).subscribe((res) => {\n      this.http.post('https://lovemu.compsoc.ie/upload/save', {filename:this.image, cookie:this.cookie}).subscribe();\n      this.authService.setUserInfo(res['token'], res['id']);\n      if (this.authService.isAuthenticated()) {\n        window.location.href= 'https://lovemu.compsoc.ie/spotify/reqAccess';\n      }\n    });\n  }\n\n  googleSubmit() {\n    window.location.href='https://lovemu.compsoc.ie/auth/google';\n  }\n\n  \n  uploadFile(file) {\n      const formData = new FormData(); \n      formData.append('file', file.data); \n      file.inProgress = true;  \n      this.uploadService.upload(formData).pipe(  \n        map(event => {  \n          switch (event.type) {  \n            case HttpEventType.UploadProgress:  \n              file.progress = Math.round(event.loaded * 100 / event.total);  \n              break;  \n            case HttpEventType.Response:  \n              return event;  \n          }  \n        }),  \n        catchError((error: HttpErrorResponse) => {  \n          file.inProgress = false;  \n          return of(`${file.data.name} upload failed.`);  \n        })).subscribe((event: any) => {  \n          if (typeof (event) === 'object') { \n            this.image = event.body.filename;\n            this.cookie = event.body.cookie; \n            console.log(event.body);  \n          }  \n          else {\n            this.image = \"default.png\";\n          }\n        });  \n    }\n\n  private async uploadFiles() {  \n    this.fileUpload.nativeElement.value = '';  \n    this.files.forEach(file => {  \n      this.uploadFile(file);  \n    });  \n    return true;\n  }\n\n  onClick() {  \n    const fileUpload = this.fileUpload.nativeElement;fileUpload.onchange = () => {  \n    for (let index = 0; index < fileUpload.files.length; index++)  \n    {  \n    const file = fileUpload.files[0];  \n    this.files.push({ data: file, inProgress: false, progress: 0});  \n    }  \n       this.uploadFiles(); \n    };  \n    fileUpload.click();  \n  }\n}","<h2>Registration</h2>\r\n\r\n  <div class = \"regDiv\">\r\n    <form class = \"registration\" [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit(registrationForm.value)\">\r\n      <mat-card class = \"registrationCard\">\r\n        <mat-card-content>\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"Email Address\" formControlName=\"email\">\r\n          </mat-form-field> &nbsp;\r\n          <mat-form-field>\r\n            <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\r\n          </mat-form-field>\r\n          <br>\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"Username\" formControlName=\"user_name\">\r\n          </mat-form-field>&nbsp;\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"First Name\" formControlName=\"fname\">\r\n          </mat-form-field>\r\n          <br>\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"Surname\" formControlName=\"sname\">\r\n          </mat-form-field>&nbsp;\r\n          <mat-form-field>\r\n            <mat-select placeholder=\"County\" formControlName=\"location\">\r\n              <mat-option value=\"Antrim\">Antrim</mat-option>\r\n              <mat-option value=\"Armagh\">Armagh</mat-option>\r\n              <mat-option value=\"Carlow\">Carlow</mat-option>\r\n              <mat-option value=\"Cavan\">Cavan</mat-option>\r\n              <mat-option value=\"Clare\">Clare</mat-option>\r\n              <mat-option value=\"Cork\">Cork</mat-option>\r\n              <mat-option value=\"Derry\">Derry</mat-option>\r\n              <mat-option value=\"Donegal\">Donegal</mat-option>\r\n              <mat-option value=\"Down\">Down</mat-option>\r\n              <mat-option value=\"Dublin\">Dublin</mat-option>\r\n              <mat-option value=\"Fermanagh\">Fermanagh</mat-option>\r\n              <mat-option value=\"Galway\">Galway</mat-option>\r\n              <mat-option value=\"Kerry\">Kerry</mat-option>\r\n              <mat-option value=\"Kildare\">Kildare</mat-option>\r\n              <mat-option value=\"Kilkenny\">Kilkenny</mat-option>\r\n              <mat-option value=\"Laois\">Laois</mat-option>\r\n              <mat-option value=\"Leitrim\">Leitrim</mat-option>\r\n              <mat-option value=\"Limerick\">Limerick</mat-option>\r\n              <mat-option value=\"Longford\">Longford</mat-option>\r\n              <mat-option value=\"Louth\">Louth</mat-option>\r\n              <mat-option value=\"Mayo\">Mayo</mat-option>\r\n              <mat-option value=\"Meath\">Meath</mat-option>\r\n              <mat-option value=\"Monaghan\">Monaghan</mat-option>\r\n              <mat-option value=\"Offaly\">Offaly</mat-option>\r\n              <mat-option value=\"Roscommon\">Roscommon</mat-option>\r\n              <mat-option value=\"Sligo\">Sligo</mat-option>\r\n              <mat-option value=\"Tipperary\">Tipperary</mat-option>\r\n              <mat-option value=\"Tyrone\">Tyrone</mat-option>\r\n              <mat-option value=\"Waterford\">Waterford</mat-option>\r\n              <mat-option value=\"Westmeath\">Westmeath</mat-option>\r\n              <mat-option value=\"Wexford\">Wexford</mat-option>\r\n              <mat-option value=\"Wicklow\">Wicklow</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <br>\r\n          <mat-form-field>\r\n            <mat-select formControlName=\"gender\" placeholder=\"Gender\">\r\n                <mat-option value=\"Female\">Female</mat-option>\r\n                <mat-option value=\"Male\">Male</mat-option>\r\n                <mat-option value=\"Rather Not Say\">Rather Not Say</mat-option>\r\n                <mat-option value=\"Other\">Other</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>&nbsp;\r\n\r\n          <mat-form-field>\r\n            <mat-select formControlName=\"sexuality\" placeholder=\"I want to see\">\r\n              <mat-option value=\"Male\"> Men </mat-option>\r\n              <mat-option value=\"Female\"> Women </mat-option>\r\n              <mat-option value=\"Everyone\"> Everyone </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <br>\r\n          <mat-form-field>\r\n            <mat-label>Date of birth</mat-label>\r\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n          </mat-form-field>\r\n          <mat-form-field class = \"bio\">\r\n            <textarea matInput placeholder=\"Bio\" formControlName=\"bio\"></textarea>\r\n          </mat-form-field>\r\n          <br>\r\n          <button type=\"button\" mat-raised-button (click)=\"fileUpload.click()\">Upload photo</button>\r\n          <input type=\"file\" #fileUpload id=\"fileUpload\" name=\"fileUpload\" multiple=\"multiple\" accept=\"image/*\" style=\"display:none;\"  (click)=\"onClick()\" />\r\n\r\n        </mat-card-content>\r\n        <mat-card-footer>\r\n          <button type=\"submit\" mat-raised-button>Register</button><br>\r\n          <a href=\"https://lovemu.compsoc.ie/auth/google\"><img src=\"https://developers.google.com/identity/images/btn_google_signin_light_normal_web.png\"></a>\r\n        </mat-card-footer>\r\n      </mat-card>\r\n    </form>\r\n  </div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  constructor(private router: Router, private http: HttpClient) { }\n\n  public handleSpotify() {\n    const url = window.location.href;\n    const queryParams = url.substring(26);\n    if (queryParams.length > 0) {\n      const tempArr = queryParams.split('=');\n      if (tempArr[0] === '?spotify_token') {\n        const spotifyToken = tempArr[1];\n        console.log(spotifyToken)\n        return this.http.post('https://lovemu.compsoc.ie/spotify/retrieveDetails', {access_token: spotifyToken}).subscribe();\n      }\n    }\n  }\n}\n","import { HttpClient, HttpEvent, HttpErrorResponse, HttpEventType, HttpParams } from  '@angular/common/http';  \nimport { map } from  'rxjs/operators';\nimport { Injectable } from '@angular/core';\n\n@Injectable({  \n  providedIn: 'root'  \n})  \nexport class UploadService { \n\tSERVER_URL: string = \"https://lovemu.compsoc.ie/upload/upload\";  \n  constructor(private httpClient: HttpClient) { }\n\n  public upload(formData) {\n    return this.httpClient.post<any>(this.SERVER_URL, formData, {\n      reportProgress: true,  \n      observe: 'events'  \n    });\n  }\n}                                                                                       ","import { Injectable } from '@angular/core';\r\nimport { User } from './users/User';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n  constructor(private cookieService:CookieService, private http: HttpClient) { }\r\n\r\n  getUsers(): Observable<User[]> {\r\n    return this.http.get<User[]>('https://lovemu.compsoc.ie/profiles');\r\n  }\r\n\r\n  getUser(id): Observable<User> { \r\n    return this.http.get<User>('https://lovemu.compsoc.ie/profiles/' + id);\r\n  }\r\n\r\n  public getCurrentUser(): string {\r\n    const id = localStorage.getItem('id');\r\n    if (id != null) return id;\r\n    else return '';\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { UsersService } from '../users.service';\nimport { User } from './User';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  users: User[];\n  breakpoint;\n\n  constructor(private userService: UsersService, private socket: Socket) { }\n\n  ngOnInit() {\n    this.getUsers();\n    this.breakpoint = (window.innerWidth <= 480) ? 1 : 6;\n  }\n\n  onResize(event) {\n    this.breakpoint = (event.target.innerWidth <= 480) ? 1 : 6;\n  }\n\n  getUsers(): void {\n    this.userService.getUsers().subscribe(\n      users => {\n        this.users = users;//.sort((a, b) => (a.score >= b.score) ? -1 : 1);\n        console.log(this.users);\n      },\n      error => console.log(error)\n    );\n  }\n}\n","<div class = \"container\">\n  <mat-card class = \"userCard\" [routerLink]=\"[user._id]\" *ngFor=\"let user of users\">\n    <mat-card-content>\n      <div class = \"userInfo\">\n        <h3>{{user.fname}} {{user.sname}} </h3>\n      </div>\n      <br>\n      <div class = \"userDiv\">\n        <img src = {{user.image}} class = \"userImage\">\n      </div>\n      <br>\n      <i class=\"material-icons\">location_on</i>\n      {{user.location}}\n      <br><br>\n      <div class = \"userBio\">\n        <h3> {{user.bio}}</h3>\n      </div>\n    </mat-card-content>\n  </mat-card>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}