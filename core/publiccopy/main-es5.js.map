{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth-guard.service.ts","webpack:///src/app/authInterceptor.ts","webpack:///src/app/authentication.service.ts","webpack:///src/app/file-list/file-list.component.ts","webpack:///src/app/file-list/file-list.component.html","webpack:///src/app/file.service.ts","webpack:///src/app/google-registration/google-registration.component.ts","webpack:///src/app/google-registration/google-registration.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/logout/logout.component.ts","webpack:///src/app/logout/logout.component.html","webpack:///src/app/message.service.ts","webpack:///src/app/message/message.component.ts","webpack:///src/app/message/message.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/registration/registration.component.ts","webpack:///src/app/registration/registration.component.html","webpack:///src/app/spotify.service.ts","webpack:///src/app/upload.service.ts","webpack:///src/app/users.service.ts","webpack:///src/app/users/users.component.ts","webpack:///src/app/users/users.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)?4ec4","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","location","messageService","authService","spotifyService","title","isAuthenticated","handleSpotify","googleValidate","back","selector","templateUrl","styleUrls","config","url","options","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuardService","route","check","navigate","providedIn","AuthInterceptor","next","token","localStorage","getItem","cloned","clone","headers","set","handle","AuthenticationService","userService","http","router","removeItem","setItem","email","password","post","subscribe","res","setUserInfo","window","href","queryParams","substring","length","tempArr","split","indexOf","verified","FileListComponent","fileService","fileList$","list","fileName","download","remove","FileService","fileList","Array","fileContent","push","splice","findIndex","name","GoogleRegistrationComponent","formBuilder","registrationForm","group","user_name","fname","sname","image","gender","sexuality","dob","bio","getUser","controls","setValue","user","getCurrentUser","getFormData","userData","put","onSubmit","HomeComponent","LoginComponent","loginForm","validate","LogoutComponent","logout","MessageService","socket","query","emit","console","log","recipient","create","observer","on","data","get","MessageComponent","snapshot","paramMap","getActiveUser","toString","activeUser","NavbarComponent","userID","usrAuthed","ProfileComponent","cookieService","sanitizer","profileForm","currentId","isCurrentUser","artists","songUrl","bypassSecurityTrustResourceUrl","favouriteSong","playlistUrl","playlist","checkFormData","editUser","RegistrationComponent","uploadService","matIconRegistry","domSanitizer","files","required","min","max","withCredentials","filename","cookie","file","formData","FormData","append","inProgress","upload","pipe","event","type","UploadProgress","progress","Math","round","loaded","total","Response","error","body","fileUpload","nativeElement","value","forEach","uploadFile","onchange","index","uploadFiles","click","onClick","static","SpotifyService","spotifyToken","access_token","UploadService","httpClient","SERVER_URL","reportProgress","observe","UsersService","UsersComponent","getUsers","breakpoint","innerWidth","target","users","environment","production","bootstrapModule","catch","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UsersComponent } from '../users/users.component';\r\nimport { RegistrationComponent } from '../registration/registration.component';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { ProfileComponent} from '../profile/profile.component';\r\nimport { LogoutComponent} from '../logout/logout.component';\r\nimport { HomeComponent} from '../home/home.component';\r\nimport { MessageComponent } from '../message/message.component';\r\n//import { MessageTestComponent } from '../message-test/message-test.component';\r\nimport { AuthGuardService } from '../auth-guard.service';\r\nimport { GoogleRegistrationComponent} from '../google-registration/google-registration.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'users', component: UsersComponent, canActivate: [AuthGuardService]},\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegistrationComponent },\r\n  { path: '', component: HomeComponent },\r\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuardService]},\r\n  { path: 'users/:id', component: ProfileComponent, canActivate: [AuthGuardService]},\r\n  { path: 'logout', component: LogoutComponent, canActivate: [AuthGuardService]},\r\n  //{ path: 'messageTest', component: MessageTestComponent, canActivate: [AuthGuardService] },\r\n  { path: 'message', component: MessageComponent, canActivate: [AuthGuardService] },\r\n  { path: 'message/:id', component: MessageComponent, canActivate: [AuthGuardService] },\r\n  { path: 'google', component: GoogleRegistrationComponent},\r\n  { path: '**', redirectTo: '' } // otherwise redirect to home\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\nimport { MessageService } from './message.service';\nimport {Location} from '@angular/common';\n\nimport { AuthenticationService } from './authentication.service';\nimport { SpotifyService } from './spotify.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'LoveMu';\n\n  constructor (private location: Location, private messageService: MessageService, private authService: AuthenticationService, private spotifyService: SpotifyService) { }\n\n  ngOnInit() {\n    this.authService.isAuthenticated();\n    this.spotifyService.handleSpotify();\n    this.authService.googleValidate();\n  }\n\n  cancel() {\n    this.location.back();\n  }\n\n  backClicked() {\n    this.location.back();\n  }\n}\n","<div class = \"mainContent\">\n  <div>\n    <app-navbar></app-navbar>\n  </div>\n  <div>\n    <router-outlet></router-outlet>\n  </div>\n  <!--<footer>\n    <div style = \"text-align: center\">\n      hello\n    </div>\n  </footer>-->\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {SocketIoModule, SocketIoConfig} from 'ngx-socket-io';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {RouterTestingModule} from '@angular/router/testing';\r\nimport {NavbarComponent} from \"./navbar/navbar.component\";\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {AppComponent} from './app.component';\r\nimport {UsersComponent} from './users/users.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegistrationComponent} from './registration/registration.component';\r\nimport {AppRoutingModule} from './app-routing/app-routing.module';\r\nimport {ProfileComponent} from './profile/profile.component';\r\n//import { MessageTestComponent } from './message-test/message-test.component';\r\nimport { MessageComponent } from './message/message.component';\r\nimport {AuthInterceptor} from './authInterceptor';\r\nimport { GoogleRegistrationComponent } from './google-registration/google-registration.component';\r\nimport { FileListComponent } from './file-list/file-list.component';\r\n\r\nconst config: SocketIoConfig = { url: 'https://lovemu.compsoc.ie/', options: {}};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UsersComponent,\r\n    LoginComponent,\r\n    RegistrationComponent,\r\n    ProfileComponent,\r\n    NavbarComponent,\r\n//    MessageTestComponent,\r\n    MessageComponent,\r\n    GoogleRegistrationComponent,\r\n    FileListComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    MatCardModule,\r\n    MatDatepickerModule,\r\n    MatDividerModule,\r\n    MatToolbarModule,\r\n    MatGridListModule,\r\n    MatSidenavModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatNativeDateModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    RouterTestingModule,\r\n    SocketIoModule.forRoot(config),\r\n    ScrollingModule,\r\n    MatProgressBarModule\r\n  ],\r\n  providers: [\r\n    CookieService,\r\n    MatNativeDateModule,\r\n    MatDatepickerModule,\r\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private authService: AuthenticationService, private route: Router) { }\n\n  canActivate(): boolean {\n    const check = this.authService.isAuthenticated()\n    if (check) {\n      return true;\n    } else {\n      this.route.navigate(['login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest,HttpHandler,HttpEvent,HttpInterceptor} from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            const cloned = req.clone({\n                headers: req.headers.set(\"Authorization\",\n                    \"Bearer \" + token)\n            });\n\n            return next.handle(cloned);\n        }\n        else {\n            return next.handle(req);\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UsersService } from './users.service';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(private userService: UsersService, private http: HttpClient, private router: Router) { }\n\n  public isAuthenticated(): boolean {\n    const token = localStorage.getItem('token');\n    if (token) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('id');\n    this.router.navigate(['/']);\n  };\n\n  public getCurrentUserID() {\n    return localStorage.getItem('id');\n  }\n\n  public setUserInfo(token, id) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('id', id)\n  }\n\n  public validate(email, password) {\n    return this.http.post('https://lovemu.compsoc.ie/auth/login', {email, password}).subscribe((res) => {\n      let token = res['token'];\n      let id = res['id'];\n      this.setUserInfo(token, id);\n      this.router.navigate(['/']);\n    });\n  }\n\n  public googleValidate() {\n    const url = window.location.href;\n    const queryParams = url.substring(26);\n    if (queryParams.length > 0) {\n      let tempArr = queryParams.split('=');\n      if (tempArr[0] === '?google_token' && tempArr.length == 4) {\n        const token = tempArr[1].substring(0, tempArr[1].indexOf(\"&\"));\n        const id = tempArr[2].substring(0, tempArr[2].indexOf(\"&\"));\n        this.setUserInfo(token, id);\n        const verified = tempArr[3].substring(0, 3);\n        if (verified != 'true') {\n          this.router.navigate(['/google']);\n        }\n      }\n    }\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { FileService } from '../file.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n selector: 'app-file-list',\n templateUrl: './file-list.component.html',\n styleUrls: ['./file-list.component.css']\n})\nexport class FileListComponent {\n\n public fileList$: Observable<string[]> = this.fileService.list();\n\n constructor(private fileService: FileService) { }\n\n public download(fileName: string):  void {\n   this.fileService.download(fileName);\n }\n\n public remove(fileName: string):  void {\n   this.fileService.remove(fileName);\n }\n}\n","<h1>Your files</h1>\n<ul>\n <li *ngFor=\"let fileName of fileList$ | async\" >\n   {{fileName}}&nbsp;&nbsp;\n   <span (click)=\"download(fileName)\">download</span>&nbsp;\n   <span (click)=\"remove(fileName)\">remove</span>\n </li>\n</ul>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject, Observable } from 'rxjs';\n\n@Injectable({\n providedIn: 'root'\n})\nexport class FileService {\n private fileList: string[] = new Array<string>();\n private fileList$: Subject<string[]> = new Subject<string[]>();\n\n constructor() { }\n\n public upload(fileName: string, fileContent: string): void {\n   this.fileList.push(fileName);\n   this.fileList$.next(this.fileList);\n }\n\n public download(fileName: string): void {\n\n }\n\n public remove(fileName): void {\n   this.fileList.splice(this.fileList.findIndex(name => name === fileName), 1);\n   this.fileList$.next(this.fileList);\n }\n\n public list(): Observable<string[]> {\n   return this.fileList$;\n }\n\n private addFileToList(fileName: string): void {\n   this.fileList.push(fileName);\n   this.fileList$.next(this.fileList);\n }\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../users/User';\n\nimport { AuthenticationService } from '../authentication.service';\nimport { UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-google-registration',\n  templateUrl: './google-registration.component.html',\n  styleUrls: ['./google-registration.component.css']\n})\nexport class GoogleRegistrationComponent implements OnInit {\n  user: User;\n  public isCurrentUser: boolean;\n  registrationForm;\n\n  constructor(private http: HttpClient, private formBuilder: FormBuilder, private userService: UsersService, private authService: AuthenticationService, private route: ActivatedRoute) {\n    this.registrationForm = this.formBuilder.group({\n      user_name: '',\n      fname: '',\n      sname: '',\n      location: '',\n      image: '',\n      gender: '',\n      sexuality: '',\n      dob: '',\n      bio: ''\n    });\n  }\n\n\n  ngOnInit(): void {\n    this.getUser();\n  }\n\n  getFormData(): void {\n    this.registrationForm.controls['user_name'].setValue(this.user.user_name);\n    this.registrationForm.controls['fname'].setValue(this.user.fname);\n    this.registrationForm.controls['sname'].setValue(this.user.sname);\n    this.registrationForm.controls['gender'].setValue(this.user.gender);\n    this.registrationForm.controls['location'].setValue(this.user.location);\n    this.registrationForm.controls['sexuality'].setValue(this.user.sexuality);\n    this.registrationForm.controls['dob'].setValue(this.user.dob);\n    this.registrationForm.controls['bio'].setValue(this.user.bio);\n  }\n\n\n  getUser(): void {\n    this.userService.getUser(this.userService.getCurrentUser()).subscribe(\n      user => {\n        this.user = user;\n        this.getFormData();\n      }\n    );\n  }\n\n  onSubmit(userData) {\n    this.http.put(`https://lovemu.compsoc.ie/profiles/${this.userService.getCurrentUser()}`, userData).subscribe((res) => {\n      window.location.href='https://lovemu.compsoc.ie/spotify/reqAccess';\n    });\n  }\n}\n","<h2>Registration</h2>\n  <div class = \"regDiv\">\n    <form class = \"registration\" [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit(registrationForm.value)\">\n      <mat-card class = \"registrationCard\">\n        <mat-card-content>\n          <mat-form-field>\n            <input matInput placeholder=\"Username\" formControlName=\"user_name\">\n          </mat-form-field>&nbsp;\n          <mat-form-field>\n            <input matInput placeholder=\"First Name\" formControlName=\"fname\">\n          </mat-form-field>\n          <br>\n          <mat-form-field>\n            <input matInput placeholder=\"Surname\" formControlName=\"sname\">\n          </mat-form-field>&nbsp;\n          <mat-form-field>\n            <mat-select placeholder=\"County\" formControlName=\"location\">\n              <mat-option value=\"Antrim\">Antrim</mat-option>\n              <mat-option value=\"Armagh\">Armagh</mat-option>\n              <mat-option value=\"Carlow\">Carlow</mat-option>\n              <mat-option value=\"Cavan\">Cavan</mat-option>\n              <mat-option value=\"Clare\">Clare</mat-option>\n              <mat-option value=\"Cork\">Cork</mat-option>\n              <mat-option value=\"Derry\">Derry</mat-option>\n              <mat-option value=\"Donegal\">Donegal</mat-option>\n              <mat-option value=\"Down\">Down</mat-option>\n              <mat-option value=\"Dublin\">Dublin</mat-option>\n              <mat-option value=\"Fermanagh\">Fermanagh</mat-option>\n              <mat-option value=\"Galway\">Galway</mat-option>\n              <mat-option value=\"Kerry\">Kerry</mat-option>\n              <mat-option value=\"Kildare\">Kildare</mat-option>\n              <mat-option value=\"Kilkenny\">Kilkenny</mat-option>\n              <mat-option value=\"Laois\">Laois</mat-option>\n              <mat-option value=\"Leitrim\">Leitrim</mat-option>\n              <mat-option value=\"Limerick\">Limerick</mat-option>\n              <mat-option value=\"Longford\">Longford</mat-option>\n              <mat-option value=\"Louth\">Louth</mat-option>\n              <mat-option value=\"Mayo\">Mayo</mat-option>\n              <mat-option value=\"Meath\">Meath</mat-option>\n              <mat-option value=\"Monaghan\">Monaghan</mat-option>\n              <mat-option value=\"Offaly\">Offaly</mat-option>\n              <mat-option value=\"Roscommon\">Roscommon</mat-option>\n              <mat-option value=\"Sligo\">Sligo</mat-option>\n              <mat-option value=\"Tipperary\">Tipperary</mat-option>\n              <mat-option value=\"Tyrone\">Tyrone</mat-option>\n              <mat-option value=\"Waterford\">Waterford</mat-option>\n              <mat-option value=\"Westmeath\">Westmeath</mat-option>\n              <mat-option value=\"Wexford\">Wexford</mat-option>\n              <mat-option value=\"Wicklow\">Wicklow</mat-option>\n            </mat-select>\n          </mat-form-field>\n          <br>\n          <mat-form-field>\n            <mat-select formControlName=\"gender\" placeholder=\"Gender\">\n                <mat-option value=\"Female\">Female</mat-option>\n                <mat-option value=\"Male\">Male</mat-option>\n                <mat-option value=\"Rather Not Say\">Rather Not Say</mat-option>\n                <mat-option value=\"Other\">Other</mat-option>\n            </mat-select>\n          </mat-form-field>&nbsp;\n\n          <mat-form-field>\n            <mat-select formControlName=\"sexuality\" placeholder=\"I want to see\">\n              <mat-option value=\"Male\"> Men </mat-option>\n              <mat-option value=\"Female\"> Women </mat-option>\n              <mat-option value=\"Everyone\"> Everyone </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <br>\n          <mat-form-field>\n            <input matInput placeholder=\"Image URL\" formControlName=\"image\">\n          </mat-form-field>\n          <mat-form-field>\n            <mat-label>Date of Birth</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n          </mat-form-field>\n          <br>\n          <mat-form-field class = \"bio\">\n            <textarea matInput placeholder=\"Bio\" formControlName=\"bio\"></textarea>\n          </mat-form-field>\n        </mat-card-content>\n        <mat-card-footer>\n          <button type=\"submit\" mat-raised-button>Register</button>\n        </mat-card-footer>\n      </mat-card>\n    </form>\n  </div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private authService: AuthenticationService, private router : Router) { }\n\n  ngOnInit(): void {\n    if (this.authService.isAuthenticated()) this.router.navigate(['/users']);\n  }\n\n}\n","<div class = \"welcome\">\n  <div class = \"sub\">Welcome to</div>\n  <br>\n  <div class = \"head\">LoveMu</div>\n  <br>\n  <div class = \"sub\">A dating website that matches you based on your music preferences!</div>\n</div>\n\n<div class = \"login\">\n  Login or register now plz\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { AuthenticationService } from '../authentication.service';\nimport { Router } from '@angular/router';\nimport { DomSanitizer} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm;\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthenticationService, private router : Router) {\n    this.loginForm = this.formBuilder.group({\n      email: '',\n      password: ''\n    });\n  }\n  ngOnInit() {\n  }\n\n  onSubmit(userData) {\n    this.authService.validate(userData.email, userData.password);\n  }\n}\n","<h2> Welcome Back to LoveMu! </h2>\n<h3> Login </h3>\n<div class = \"loginDiv\">\n<form [formGroup]=\"loginForm\" class = \"loginForm\" (ngSubmit)=\"onSubmit(loginForm.value)\">\n  <mat-card class = \"loginCard\">\n    <mat-card-content>\n      <mat-form-field>\n        <input matInput type=\"email\" placeholder=\"Email Address or Username\" formControlName=\"email\">\n      </mat-form-field>\n      <br>\n      <mat-form-field>\n        <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\">\n      </mat-form-field>\n    </mat-card-content>\n    <mat-card-footer>\n      <button type=\"submit\" mat-raised-button>Login</button>\n      <a href=\"https://lovemu.compsoc.ie/auth/google\"><img src=\"https://developers.google.com/identity/images/btn_google_signin_light_normal_web.png\"></a>\n    </mat-card-footer>\n  </mat-card>\n</form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private authService: AuthenticationService, private router : Router) { }\n\n  ngOnInit(): void {\n    this.authService.logout();\n  }\n\n}\n","<p>logout works!</p>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport * as io from 'socket.io-client';\nimport { Observable } from 'rxjs/Observable';\nimport { Message } from './message/Message';\nimport { Chatroom } from './message/Chatroom'\nimport { UsersService } from './users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  private url = 'https://lovemu.compsoc.ie';\n  private socket;  \n  messages: Message[]; \n\n  constructor(private userService: UsersService, public http: HttpClient) { \n    this.socket = io(this.url, { query: { id: userService.getCurrentUser() }});\n    this.socket.emit('message', 'Hello there from Angular.');\n  }\n\n  sendMessage(userData) {\n    console.log(userData);\n    if (userData.recipient == \"\") userData.recipient = \"5e5fbb06b13a0a5dd22a8008\";\n    this.http.post('https://lovemu.compsoc.ie/messages/send', userData).subscribe((res => {\n      this.socket.emit('dm', userData);\n    }));\n  }\n\n  onNewMessage() {\n    return Observable.create((observer) => {\n      this.socket.on('message', (data) => {\n          observer.next(data);\n      });\n    });\n  }\n\n  getInitChatrooms(): Observable<Chatroom[]> {\n    return this.http.get<Chatroom[]>('https://lovemu.compsoc.ie/messages/chatroom');\n  }\n\n  getMessages(id): Observable<Message[]> {\n    return this.http.get<Message[]>('https://lovemu.compsoc.ie/messages/retrieve/'+id);\n  }\n\n  /*sendMessage(userData) {\n    //this.socket.emit('message', message);\n    this.http.post('https://lovemu.compsoc.ie/messages/send', userData).subscribe((res => {\n      console.log('Req Made');\n    }));\n  }*/\n\n  /*public getNewMessages = () => {\n    return Observable.create((observer) => {\n        this.socket.on('message', (message) => {\n            observer.next(message);\n        });\n    });\n  }*/\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from '../users/User';\nimport { UsersService } from '../users.service';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.css']\n})\nexport class MessageComponent implements OnInit {\n  activeUser: User;\n  user: User;\n\n  constructor(public messageService: MessageService, private userService: UsersService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.getUser();\n    let id = this.route.snapshot.paramMap.get('id');\n    if (id != null) this.getActiveUser(id);\n  }\n\n  getActiveUser(id): void {\n    this.userService.getUser(id.toString()).subscribe((user) => {\n      this.activeUser = user;\n    });\n  }\n\n  getUser(): void {\n    let id = this.userService.getCurrentUser();\n    this.userService.getUser(id.toString()).subscribe((user) => {\n      this.user = user;\n    });\n  } \n\n}\n","\n<p>message pagtese</p>\n<div *ngIf=\"user && activeUser\">\n    <p>{{user.fname}}</p>\n    <p>{{activeUser.fname}}</p>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from \"../authentication.service\";\nimport { Observable } from \"rxjs\";\nimport { UsersService } from '../users.service'\nimport { User } from '../users/User';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  userID: String;\n  usrAuthed: boolean;\n\n  constructor(public userService: UsersService, public authService: AuthenticationService) {\n  }\n\n  ngOnInit(): void {\n    this.userID = this.userService.getCurrentUser();\n    this.usrAuthed = this.authService.isAuthenticated();\n  }\n\n}\n","<ng-container>\n  <mat-toolbar class = \"toolbar\">\n    <span>\n      <a routerLink = \"/\">LoveMu</a>\n    </span>\n    <span class = \"spacer\"> </span>\n    <a *ngIf = \"authService.isAuthenticated()\" routerLink = \"/users\">Dashboard</a>\n    <a routerLink = \"/messageTest\" *ngIf = \"authService.isAuthenticated()\">Messaging</a>\n    <a *ngIf = \"!authService.isAuthenticated()\" routerLink = \"/register\" >Register</a>\n    <a *ngIf = \"!authService.isAuthenticated()\" routerLink = \"/login\">Login</a>\n    <a *ngIf = \"authService.isAuthenticated()\" [routerLink] = \"['/users/', userService.getCurrentUser()]\">Edit Profile</a>\n    <a routerLink = \"/\" (click) = \"authService.logout()\" *ngIf = \"authService.isAuthenticated()\">Logout</a>\n  </mat-toolbar>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FormBuilder } from '@angular/forms';\nimport { User } from '../users/User';\nimport { UsersService } from '../users.service';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthenticationService } from '../authentication.service';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { Artist } from '../users/Artist';\nimport { DomSanitizer, SafeResourceUrl, SafeUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n})\nexport class ProfileComponent implements OnInit {\n  user: User;\n  artists: Artist[];\n  public isCurrentUser: boolean;\n  profileForm;\n  playlistUrl: SafeResourceUrl;\n  songUrl: SafeResourceUrl;\n  public editUser: boolean\n\n  constructor(private http: HttpClient, private formBuilder: FormBuilder, private cookieService: CookieService, private route: ActivatedRoute, private userService: UsersService, private authService: AuthenticationService, private sanitizer: DomSanitizer) {\n    this.profileForm = this.formBuilder.group({\n      fname: '',\n      sname: '',\n      location: '',\n      image: '',\n      gender: '',\n      sexuality: '',\n      bio: '',\n      user_name: '',\n      dob: ''\n    });\n  }\n\n\n  ngOnInit(): void {\n    this.getUser();\n  }\n\n  getFormData(): void {\n    this.profileForm.controls['fname'].setValue(this.user.fname);\n    this.profileForm.controls['sname'].setValue(this.user.sname);\n    this.profileForm.controls['gender'].setValue(this.user.gender);\n    this.profileForm.controls['location'].setValue(this.user.location);\n    this.profileForm.controls['sexuality'].setValue(this.user.sexuality);\n    this.profileForm.controls['user_name'].setValue(this.user.user_name);\n    this.profileForm.controls['bio'].setValue(this.user.bio);\n    this.profileForm.controls['gender'].setValue(this.user.gender);\n    this.profileForm.controls['sexuality'].setValue(this.user.sexuality);\n    this.profileForm.controls['dob'].setValue(this.user.dob);\n  }\n\n  checkFormData(userData): void {\n    if (!userData.fname) userData.fname = this.user.fname;\n    if (!userData.sname) userData.sname = this.user.sname;\n    if (!userData.gender) userData.gender = this.user.gender;\n    if (!userData.location) userData.location = this.user.location;\n    if (!userData.image) userData.image = this.user.image;\n    if (!userData.sexuality) userData.sexuality = this.user.sexuality;\n    if (!userData.bio) userData.bio = this.user.bio;\n    if (!userData.user_name) userData.user_name = this.user.user_name;\n  }\n\n  getUser(): void {\n    let id = this.route.snapshot.paramMap.get('id');\n    let currentId = this.userService.getCurrentUser();\n\n    if (currentId == id) {\n      this.isCurrentUser = true;\n    }\n    this.userService.getUser(id.toString()).subscribe((user) => {\n      this.user = user;\n      this.artists = user.artists;\n      console.log(user);\n      if (this.songUrl != '') {\n        this.songUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.user.favouriteSong);\n      }\n      if (this.playlistUrl != '') {\n        this.playlistUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.user.playlist);\n      }\n      this.getFormData();\n    });\n  }\n\n  onSubmit(userData) {\n    this.checkFormData(userData);\n    this.http.put('https://lovemu.compsoc.ie/profiles/' + this.userService.getCurrentUser(), userData).subscribe((res) => {\n      this.editUser = false;\n    });\n  }\n\n  \n}\n","<!-- Generic profile page shown for all profiles -->\n<div *ngIf=\"user && !editUser\" class = \"container\">\n  <div class = \"profile\">\n    <!-- First card in profile div: main info, pic, match, etc -->\n    <mat-card class = \"mainProfile\">\n      <mat-card-content>\n        <div *ngIf = \"user && !this.isCurrentUser\">\n          <!-- Match % -->\n          {{user.score}}% Match\n          <section class=\"section\">\n            <mat-progress-bar value = \"{{user.score}}\" color = \"accent\">\n            </mat-progress-bar>\n          </section>\n        </div>\n        <div *ngIf = \"user && this.isCurrentUser\">\n          <button (click)=\"editUser = true\" class = \"editButton\" mat-raised-button>Edit Profile</button>\n        </div>\n        <!-- User image -->\n        <img src = {{user.image}} class = \"userImage\">\n        <br><br>\n        <!-- Name, Sexuality, Gender, Location - with icons -->\n        <div class = \"info\">\n          <div class = \"basicInfo\">\n            {{user.fname}} {{user.sname}}, {{user.age}}\n          </div>\n          <div>\n            <i class=\"material-icons\">location_on</i>{{user.location}}\n          </div>\n          <div *ngIf = \"user.gender != 'Rather Not Say'\">\n            <i *ngIf = \"user.gender == 'Male'\" class = 'fas fa-male'></i>\n            <i *ngIf = \"user.gender == 'Female'\" class = 'fas fa-female'></i>\n            <i *ngIf = \"user.gender == 'Other'\" class=\"material-icons\">person</i>\n            {{user.gender}}\n          </div>\n          <div>\n            <i *ngIf = \"user.sexuality == 'Women'\" class=\"fas fa-venus\"></i>\n            <i *ngIf = \"user.sexuality == 'Men'\" class=\"fa fa-mars\"></i>\n            <i *ngIf = \"user.sexuality == 'Everyone'\" class=\"fa fa-venus-mars\"></i>\n            {{user.sexuality}}\n          </div>\n        </div>\n        <br>\n        <!-- Bio divided with divider -->\n        <mat-divider></mat-divider>\n        <div class = \"bio\">\n          {{user.bio}}\n        </div>\n        <mat-divider></mat-divider>\n        <button routerLink=\"/message/{{user._id}}\"mat-raised-button=\"\">Send a message!</button>\n      </mat-card-content>\n    </mat-card>\n\n    <br>\n\n    <!-- Second card in profile div: spotify widget -->\n    <mat-card class = \"spotifyWidget\">\n      <div class=\"playlist\">\n        <iframe class = \"spotify\" src=\"https://open.spotify.com/embed/playlist/37i9dQZF1DX6p4TJxzMRDe\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n        <!--  <iframe *ngIf=\"songUrl\"[src]=playlistUrl width=\"300\" height=\"320\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n          <iframe *ngIf=\"playlistUrl\"[src]=songUrl width=\"300\" height=\"320\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe> -->\n      </div>\n    </mat-card>\n  </div> <!-- End of profile div -->\n\n  <!-- Card that will go either to right or underneath that shows users music info -->\n  <mat-card class = \"music\">\n    <div class = \"top\">\n      Top Artists!\n    </div>\n    <div class = \"artists\">\n      <div *ngFor = \"let artist of artists\">\n        <a class = \"artistLink\" href={{artist.external_urls.spotify}}>\n          <img class = \"artistImage\" src = \"{{artist.images[0].url}}\">\n          {{artist.name}}\n        </a>\n        <mat-divider></mat-divider>\n      </div>\n    </div>\n  </mat-card>\n\n</div> <!-- End of container div -->\n\n<!-- This is only shown to a user when they are editing a profile that is their own after they click edit profile button -->\n<div class =\"updateDiv\" *ngIf=\"user && editUser\">\n  <form class = \"updateForm\" [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit(profileForm.value)\">\n    <mat-card class = \"updateCard\">\n      <mat-card-content>\n\n        <mat-form-field>\n          <input matInput placeholder=\"First Name\" formControlName=\"fname\">\n        </mat-form-field>&nbsp;\n\n        <mat-form-field>\n          <input matInput placeholder=\"Surname\" formControlName = \"sname\">\n        </mat-form-field>\n\n        <br>\n\n        <mat-form-field>\n          <input matInput placeholder=\"Username\" formControlName = \"user_name\">\n        </mat-form-field>&nbsp;\n\n        <mat-form-field>\n          <mat-label>Date of birth</mat-label>\n          <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field>\n\n        <br>\n\n        <!--\n        <mat-form-field>\n          <mat-select name=\"country\" placeholder=\"Country\" formControlName = \"country\">\n            <option *ngFor = \"let country of countries\" value=\"{{country??}}\">Select Country</option>\n          </mat-select>\n        </mat-form-field>&nbsp;\n\n        <mat-form-field>\n          <mat-select name=\"state\" class=\"states order-alpha\" id=\"stateId\">\n            <option value=\"\">Select State</option>\n          </mat-select>\n        </mat-form-field>\n        -->\n\n        <br>\n\n        <mat-form-field>\n          <mat-select formControlName=\"gender\" placeholder=\"Gender\">\n            <mat-option value=\"Female\">Female</mat-option>\n            <mat-option value=\"Male\">Male</mat-option>\n            <mat-option value=\"Rather Not Say\">Rather Not Say</mat-option>\n            <mat-option value=\"Other\">Other</mat-option>\n          </mat-select>\n        </mat-form-field>&nbsp;\n\n        <mat-form-field>\n          <mat-select formControlName=\"sexuality\" placeholder=\"I want to see\">\n            <mat-option value=\"Male\"> Men </mat-option>\n            <mat-option value=\"Female\"> Women </mat-option>\n            <mat-option value=\"Everyone\"> Everyone </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <br>\n\n        <mat-form-field class = \"bio\">\n          <textarea matInput placeholder=\"Bio\" formControlName=\"bio\"></textarea>\n        </mat-form-field>\n\n        <br>\n\n        <!--\n        <button type=\"button\" mat-raised-button (click)=\"fileUpload.click()\">Upload photo</button>\n        <input type=\"file\" #fileUpload id=\"fileUpload\" name=\"fileUpload\" multiple=\"multiple\" accept=\"image/*\" style=\"display:none;\"  (click)=\"onClick()\" />\n        -->\n      </mat-card-content>\n      <mat-card-footer>\n        <button class = \"updateButton\" type=\"submit\" mat-raised-button>Change</button>\n      </mat-card-footer>\n    </mat-card>\n  </form>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef  } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpEventType, HttpErrorResponse } from '@angular/common/http';\nimport { AuthenticationService } from '../authentication.service';\nimport { of } from 'rxjs';  \nimport { catchError, map } from 'rxjs/operators';  \nimport { UploadService } from  '../upload.service';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\n\nexport class RegistrationComponent implements OnInit {\n  registrationForm;\n  cookie: string;\n  image: string = \"default.png\";\n  @ViewChild(\"fileUpload\", {static: false}) fileUpload: ElementRef;\n  files  = [];\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthenticationService, private router : Router, private http: HttpClient, private uploadService: UploadService, private matIconRegistry: MatIconRegistry, private domSanitizer: DomSanitizer) {\n    this.registrationForm = this.formBuilder.group({\n      email: ['', Validators.required, Validators.email],\n      password:['', Validators.required, Validators.min(5)],\n      user_name: ['', Validators.required, Validators.min(5), Validators.max(20)],\n      fname: ['', Validators.required, Validators.max(20)],\n      sname: ['', Validators.required, Validators.max(20)],\n      location: ['', Validators.required],\n      dob: ['', Validators.required],\n      image: '',\n      gender: ['', Validators.required],\n      sexuality: ['', Validators.required],\n      bio: ['']\n    });\n  }\n\n  ngOnInit() {  \n    \n  }\n\n  onSubmit(userData) {\n    userData.image = this.image;\n    this.http.post('https://lovemu.compsoc.ie/auth/register', userData, {withCredentials: true}).subscribe((res) => {\n      this.http.post('https://lovemu.compsoc.ie/upload/save', {filename:this.image, cookie:this.cookie}).subscribe();\n      this.authService.setUserInfo(res['token'], res['id']);\n      if (this.authService.isAuthenticated()) {\n        window.location.href= 'https://lovemu.compsoc.ie/spotify/reqAccess';\n      }\n    });\n  }\n\n  googleSubmit() {\n    window.location.href='https://lovemu.compsoc.ie/auth/google';\n  }\n\n  \n  uploadFile(file) {\n      const formData = new FormData(); \n      formData.append('file', file.data); \n      file.inProgress = true;  \n      this.uploadService.upload(formData).pipe(  \n        map(event => {  \n          switch (event.type) {  \n            case HttpEventType.UploadProgress:  \n              file.progress = Math.round(event.loaded * 100 / event.total);  \n              break;  \n            case HttpEventType.Response:  \n              return event;  \n          }  \n        }),  \n        catchError((error: HttpErrorResponse) => {  \n          file.inProgress = false;  \n          return of(`${file.data.name} upload failed.`);  \n        })).subscribe((event: any) => {  \n          if (typeof (event) === 'object') { \n            this.image = event.body.filename;\n            this.cookie = event.body.cookie; \n            console.log(event.body);  \n          }  \n          else {\n            this.image = \"default.png\";\n          }\n        });  \n    }\n\n  private async uploadFiles() {  \n    this.fileUpload.nativeElement.value = '';  \n    this.files.forEach(file => {  \n      this.uploadFile(file);  \n    });  \n    return true;\n  }\n\n  onClick() {  \n    const fileUpload = this.fileUpload.nativeElement;fileUpload.onchange = () => {  \n    for (let index = 0; index < fileUpload.files.length; index++)  \n    {  \n    const file = fileUpload.files[0];  \n    this.files.push({ data: file, inProgress: false, progress: 0});  \n    }  \n       this.uploadFiles(); \n    };  \n    fileUpload.click();  \n  }\n}","<h2>Registration</h2>\r\n\r\n  <div class = \"regDiv\">\r\n    <form class = \"registration\" [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit(registrationForm.value)\">\r\n      <mat-card class = \"registrationCard\">\r\n        <mat-card-content>\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"Email Address\" formControlName=\"email\">\r\n          </mat-form-field> &nbsp;\r\n          <mat-form-field>\r\n            <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\r\n          </mat-form-field>\r\n          <br>\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"Username\" formControlName=\"user_name\">\r\n          </mat-form-field>&nbsp;\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"First Name\" formControlName=\"fname\">\r\n          </mat-form-field>\r\n          <br>\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"Surname\" formControlName=\"sname\">\r\n          </mat-form-field>&nbsp;\r\n          <mat-form-field>\r\n            <mat-select placeholder=\"County\" formControlName=\"location\">\r\n              <mat-option value=\"Antrim\">Antrim</mat-option>\r\n              <mat-option value=\"Armagh\">Armagh</mat-option>\r\n              <mat-option value=\"Carlow\">Carlow</mat-option>\r\n              <mat-option value=\"Cavan\">Cavan</mat-option>\r\n              <mat-option value=\"Clare\">Clare</mat-option>\r\n              <mat-option value=\"Cork\">Cork</mat-option>\r\n              <mat-option value=\"Derry\">Derry</mat-option>\r\n              <mat-option value=\"Donegal\">Donegal</mat-option>\r\n              <mat-option value=\"Down\">Down</mat-option>\r\n              <mat-option value=\"Dublin\">Dublin</mat-option>\r\n              <mat-option value=\"Fermanagh\">Fermanagh</mat-option>\r\n              <mat-option value=\"Galway\">Galway</mat-option>\r\n              <mat-option value=\"Kerry\">Kerry</mat-option>\r\n              <mat-option value=\"Kildare\">Kildare</mat-option>\r\n              <mat-option value=\"Kilkenny\">Kilkenny</mat-option>\r\n              <mat-option value=\"Laois\">Laois</mat-option>\r\n              <mat-option value=\"Leitrim\">Leitrim</mat-option>\r\n              <mat-option value=\"Limerick\">Limerick</mat-option>\r\n              <mat-option value=\"Longford\">Longford</mat-option>\r\n              <mat-option value=\"Louth\">Louth</mat-option>\r\n              <mat-option value=\"Mayo\">Mayo</mat-option>\r\n              <mat-option value=\"Meath\">Meath</mat-option>\r\n              <mat-option value=\"Monaghan\">Monaghan</mat-option>\r\n              <mat-option value=\"Offaly\">Offaly</mat-option>\r\n              <mat-option value=\"Roscommon\">Roscommon</mat-option>\r\n              <mat-option value=\"Sligo\">Sligo</mat-option>\r\n              <mat-option value=\"Tipperary\">Tipperary</mat-option>\r\n              <mat-option value=\"Tyrone\">Tyrone</mat-option>\r\n              <mat-option value=\"Waterford\">Waterford</mat-option>\r\n              <mat-option value=\"Westmeath\">Westmeath</mat-option>\r\n              <mat-option value=\"Wexford\">Wexford</mat-option>\r\n              <mat-option value=\"Wicklow\">Wicklow</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <br>\r\n          <mat-form-field>\r\n            <mat-select formControlName=\"gender\" placeholder=\"Gender\">\r\n                <mat-option value=\"Female\">Female</mat-option>\r\n                <mat-option value=\"Male\">Male</mat-option>\r\n                <mat-option value=\"Rather Not Say\">Rather Not Say</mat-option>\r\n                <mat-option value=\"Other\">Other</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>&nbsp;\r\n\r\n          <mat-form-field>\r\n            <mat-select formControlName=\"sexuality\" placeholder=\"I want to see\">\r\n              <mat-option value=\"Male\"> Men </mat-option>\r\n              <mat-option value=\"Female\"> Women </mat-option>\r\n              <mat-option value=\"Everyone\"> Everyone </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <br>\r\n          <mat-form-field>\r\n            <mat-label>Date of birth</mat-label>\r\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n          </mat-form-field>\r\n          <mat-form-field class = \"bio\">\r\n            <textarea matInput placeholder=\"Bio\" formControlName=\"bio\"></textarea>\r\n          </mat-form-field>\r\n          <br>\r\n          <button type=\"button\" mat-raised-button (click)=\"fileUpload.click()\">Upload photo</button>\r\n          <input type=\"file\" #fileUpload id=\"fileUpload\" name=\"fileUpload\" multiple=\"multiple\" accept=\"image/*\" style=\"display:none;\"  (click)=\"onClick()\" />\r\n\r\n        </mat-card-content>\r\n        <mat-card-footer>\r\n          <button type=\"submit\" mat-raised-button>Register</button><br>\r\n          <a href=\"https://lovemu.compsoc.ie/auth/google\"><img src=\"https://developers.google.com/identity/images/btn_google_signin_light_normal_web.png\"></a>\r\n        </mat-card-footer>\r\n      </mat-card>\r\n    </form>\r\n  </div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  constructor(private router: Router, private http: HttpClient) { }\n\n  public handleSpotify() {\n    const url = window.location.href;\n    const queryParams = url.substring(26);\n    if (queryParams.length > 0) {\n      const tempArr = queryParams.split('=');\n      if (tempArr[0] === '?spotify_token') {\n        const spotifyToken = tempArr[1];\n        console.log(spotifyToken)\n        return this.http.post('https://lovemu.compsoc.ie/spotify/retrieveDetails', {access_token: spotifyToken}).subscribe();\n      }\n    }\n  }\n}\n","import { HttpClient, HttpEvent, HttpErrorResponse, HttpEventType, HttpParams } from  '@angular/common/http';  \nimport { map } from  'rxjs/operators';\nimport { Injectable } from '@angular/core';\n\n@Injectable({  \n  providedIn: 'root'  \n})  \nexport class UploadService { \n\tSERVER_URL: string = \"https://lovemu.compsoc.ie/upload/upload\";  \n  constructor(private httpClient: HttpClient) { }\n\n  public upload(formData) {\n    return this.httpClient.post<any>(this.SERVER_URL, formData, {\n      reportProgress: true,  \n      observe: 'events'  \n    });\n  }\n}                                                                                       ","import { Injectable } from '@angular/core';\r\nimport { User } from './users/User';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n  constructor(private cookieService:CookieService, private http: HttpClient) { }\r\n\r\n  getUsers(): Observable<User[]> {\r\n    return this.http.get<User[]>('https://lovemu.compsoc.ie/profiles');\r\n  }\r\n\r\n  getUser(id): Observable<User> { \r\n    return this.http.get<User>('https://lovemu.compsoc.ie/profiles/' + id);\r\n  }\r\n\r\n  public getCurrentUser(): string {\r\n    const id = localStorage.getItem('id');\r\n    if (id != null) return id;\r\n    else return '';\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { UsersService } from '../users.service';\nimport { User } from './User';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  users: User[];\n  breakpoint;\n\n  constructor(private userService: UsersService, private socket: Socket) { }\n\n  ngOnInit() {\n    this.getUsers();\n    this.breakpoint = (window.innerWidth <= 480) ? 1 : 6;\n  }\n\n  onResize(event) {\n    this.breakpoint = (event.target.innerWidth <= 480) ? 1 : 6;\n  }\n\n  getUsers(): void {\n    this.userService.getUsers().subscribe(\n      users => {\n        this.users = users;//.sort((a, b) => (a.score >= b.score) ? -1 : 1);\n        console.log(this.users);\n      },\n      error => console.log(error)\n    );\n  }\n}\n","<div class = \"container\">\n  <mat-card class = \"userCard\" [routerLink]=\"[user._id]\" *ngFor=\"let user of users\">\n    <mat-card-content>\n      <div class = \"userInfo\">\n        <h3>{{user.fname}} {{user.sname}} </h3>\n      </div>\n      <br>\n      <div class = \"userDiv\">\n        <img src = {{user.image}} class = \"userImage\">\n      </div>\n      <br>\n      <i class=\"material-icons\">location_on</i>\n      {{user.location}}\n      <br><br>\n      <div class = \"userBio\">\n        <h3> {{user.bio}}</h3>\n      </div>\n    </mat-card-content>\n  </mat-card>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */"]}